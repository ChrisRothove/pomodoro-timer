{"version":3,"sources":["utils/duration/index.js","pomodoro/components/FocusButtons.jsx","pomodoro/components/BreakButtons.jsx","pomodoro/components/DurationHeader.jsx","pomodoro/components/TimerDisplay.jsx","utils/custom-utils/index.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","FocusButtons","reduceFocus","increaseFocus","timers","isStopped","className","type","data-testid","onClick","disabled","BreakButtons","reduceBreak","increaseBreak","DurationHeader","onBreak","break","focus","TimerDisplay","givenSeconds","seconds","round","secondsToDuration","current","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","ariaPercentage","width","breakTime","focusTime","Pomodoro","classNameToBoolean","initialTimerState","useState","isTimerRunning","setIsTimerRunning","setTimers","callback","delay","savedCallback","useRef","useEffect","id","setInterval","clearInterval","useInterval","Audio","process","play","newFocus","newBreak","aria-label","title","prevState","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81b8c926.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\r\n\r\nfunction FocusButtons({ reduceFocus, increaseFocus, timers }) {\r\n  if (timers.isStopped) {\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"decrease-focus\"\r\n          onClick={reduceFocus}\r\n        >\r\n          <span className=\"oi oi-minus\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"increase-focus\"\r\n          onClick={increaseFocus}\r\n        >\r\n          <span className=\"oi oi-plus\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"decrease-focus\"\r\n          disabled\r\n        >\r\n          <span className=\"oi oi-minus\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"increase-focus\"\r\n          disabled\r\n        >\r\n          <span className=\"oi oi-plus\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FocusButtons;\r\n","import React from \"react\";\r\n\r\nfunction BreakButtons({ reduceBreak, increaseBreak, timers }) {\r\n  if (timers.isStopped) {\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"decrease-break\"\r\n          onClick={reduceBreak}\r\n        >\r\n          <span className=\"oi oi-minus\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"increase-break\"\r\n          onClick={increaseBreak}\r\n        >\r\n          <span className=\"oi oi-plus\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"decrease-break\"\r\n          disabled\r\n        >\r\n          <span className=\"oi oi-minus\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"increase-break\"\r\n          disabled\r\n        >\r\n          <span className=\"oi oi-plus\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BreakButtons;\r\n","import React from \"react\";\r\n\r\nfunction DurationHeader({ timers, minutesToDuration }) {\r\n  if (timers.onBreak) {\r\n    return (\r\n      <h2 data-testid=\"session-title\">\r\n        On Break for {minutesToDuration(timers.break)} minutes\r\n      </h2>\r\n    );\r\n  } else {\r\n    return (\r\n      <h2 data-testid=\"session-title\">\r\n        Focusing for {minutesToDuration(timers.focus)} minutes\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DurationHeader;\r\n","import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../../utils/duration\";\r\nimport DurationHeader from \"../components/DurationHeader\";\r\n\r\nfunction TimerDisplay({ timers }) {\r\n  if (!timers.isStopped) {\r\n    return (\r\n      <div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <DurationHeader\r\n              timers={timers}\r\n              minutesToDuration={minutesToDuration}\r\n            />\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(timers.current)} remaining\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={timers.ariaPercentage}\r\n                style={{ width: `${timers.ariaPercentage}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default TimerDisplay;\r\n","function reduceFocus(timers, setTimers) {\r\n  let newFocus = timers.focus - 5;\r\n  if (newFocus < 5) newFocus = 5;\r\n  setTimers({\r\n    ...timers,\r\n    focus: newFocus,\r\n    current: newFocus * 60,\r\n  });\r\n}\r\n\r\nfunction increaseFocus(timers, setTimers) {\r\n  let newFocus = timers.focus + 5;\r\n  if (newFocus >= 60) newFocus = 60;\r\n  setTimers({\r\n    ...timers,\r\n    focus: newFocus,\r\n    current: newFocus * 60,\r\n  });\r\n}\r\n\r\nfunction reduceBreak(timers, setTimers) {\r\n  let newBreak = timers.break - 1;\r\n  if (newBreak < 1) newBreak = 1;\r\n  setTimers({\r\n    ...timers,\r\n    break: newBreak,\r\n  });\r\n}\r\n\r\nfunction increaseBreak(timers, setTimers) {\r\n  let newBreak = timers.break + 1;\r\n  if (newBreak >= 15) newBreak = 15;\r\n  setTimers({\r\n    ...timers,\r\n    break: newBreak,\r\n  });\r\n}\r\n\r\nfunction ariaPercentage(timers) {\r\n  if (timers.onBreak) {\r\n    const breakTime = timers.break * 60;\r\n    const percentage = timers.current / breakTime;\r\n    const wholePercentage = percentage * 100;\r\n    return 100 - wholePercentage;\r\n  } else {\r\n    const focusTime = timers.focus * 60;\r\n    const percentage = timers.current / focusTime;\r\n    const wholePercentage = percentage * 100;\r\n    return 100 - wholePercentage;\r\n  }\r\n}\r\n\r\nexport {\r\n  increaseBreak,\r\n  reduceBreak,\r\n  increaseFocus,\r\n  reduceFocus,\r\n  ariaPercentage,\r\n};\r\n","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusButtons from \"./components/FocusButtons\";\nimport BreakButtons from \"./components/BreakButtons\";\nimport TimerDisplay from \"./components/TimerDisplay\";\nimport {\n  increaseBreak,\n  reduceBreak,\n  increaseFocus,\n  reduceFocus,\n  ariaPercentage,\n} from \"../utils/custom-utils\";\n\nfunction Pomodoro() {\n  const initialTimerState = {\n    focus: 25,\n    break: 5,\n    current: 1500,\n    ariaPercentage: 0,\n    onBreak: false,\n    isStopped: true,\n  };\n\n  // Timer starts out stopped\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // timers holds all state requirements initialized in\n  // the initial state variable\n  const [timers, setTimers] = useState(initialTimerState);\n\n  useInterval(\n    () => {\n      setTimers({\n        ...timers,\n        current: timers.current - 1,\n        ariaPercentage: ariaPercentage(timers),\n      });\n      if (timers.current <= 1) {\n        new Audio(`${process.env.PUBLIC_URL}/alarm/emergency001.mp3`).play();\n        setTimers({\n          ...timers,\n          current: timers.onBreak ? timers.focus * 60 : timers.break * 60,\n          onBreak: !timers.onBreak,\n        });\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function startFresh() {\n    setTimers({\n      ...initialTimerState,\n      isStopped: true,\n    });\n    setIsTimerRunning(false);\n  }\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    if (timers.isStopped) {\n      setTimers({\n        ...timers,\n        isStopped: false,\n      });\n    }\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {minutesToDuration(timers.focus)}\n            </span>\n            {/*Component for the focus and break selectors*/}\n            <FocusButtons\n              reduceFocus={() => reduceFocus(timers, setTimers)}\n              increaseFocus={() => increaseFocus(timers, setTimers)}\n              timers={timers}\n            />\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                Break Duration: {minutesToDuration(timers.break)}\n              </span>\n              <BreakButtons\n                increaseBreak={() => increaseBreak(timers, setTimers)}\n                reduceBreak={() => reduceBreak(timers, setTimers)}\n                timers={timers}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={startFresh}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <TimerDisplay timers={timers} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}